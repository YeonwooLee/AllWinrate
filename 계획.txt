수정순서! mapper - service.interface - service.class - controller


#통합프로젝트
-componentscan 있는지
-component 있는지


#자유게시판 생성
*조합별 페이지와 차이점: 게시판 유무 확인 후 생성 작업 필요 x
게시글 
VC
+01/09 게시판 메인에 글쓰기 버튼
+01/09 게시
  
VR
VU
+01/09
D
+1/10 
	mapper에 삭제 sql 추가 =  boolean deleteByBno
	service에 삭제 기능 추가 = public boolean deleteByBno(int bno)
	controller에 free_board/{bno}/delete 추가 = public String deleteFreeBoard(@PathVariable("bno") int bno)
	freeBoardArticle에 글삭제 버튼 추가 = <a th:href="@{|/free_board/${freeBoard.bno}/delete|}">글 삭제</a>


페이징
	mapper: int getFreeBoardNum(), List<FreeBoard> freeBoardListPage
	service: List<FreeBoard> freeBoardListPage()
	controller:String getListPage

검색	
    searchType: searchByTitle, searchByContent, searchByWriter, searchByTitleOrWriter
	mapper: 
		int freeBoardCountFindByTitle, List<FreeBoard> freeBoardFindByTitle
	service: 
		Paging freeBoardFindListPage
	controller: 
		String findArticle

댓글
R
	mapper List<Reply> findReplyByBno
	service List<Reply> findReplyByBno
	controller String readFreeBoard
C
	mapper: int save_frboard_reply
	service: int writeFreeBoardReply
	controller: String saveReply


U
	mapper: boolean freeBoardReplyUpdate
	service:V
	controller:V
D
	mapper:boolean deleteReply
	service: V
	controller:V

3개
0,1,2
3,4,5
6,7,8

<awrmain에서 챔피언 조합 누르면 해당 챔피언 게시판으로 가도록>

#조합별 페이지(allwinrate 에서 조합 누르면 드롭다운 내려오는거)
1. 단일 조합에 대한 게시판 기능
(
           	V조합에 대한 게시판 유무 확인,
	생성 , 
	게시글 crud
R
	mapper: v
	service: v
	controller:v

C
	mapper: v
	service: v
	controller:v
U
	mapper: v
	service: v
	controller:v
D
	mapper: v
	service: v
	controller:v

awrmain.html에서 tr 누르면 controller에 
1.원딜_서폿 게시판 있냐
2. 
)
2. 1을 기존 프로젝트에 탑재
2. 추천비추 기능
3. view에 탑재





https://kuzuro.blogspot.com/search/label/%EC%8A%A4%ED%94%84%EB%A7%81%20%EA%B2%8C%EC%8B%9C%ED%8C%90%20%EB%A7%8C%EB%93%A4%EA%B8%B0
16개 글

#챔피언추천(minpansoo, wellCompareTo, wellView)
1.원딜추천
	1-아무것도 모름
	2-mSup 앎        		서폿vs
	3-mSup, eAdc 앎 		원딜vs서폿
	4-mSup, eSup 앎 		서폿vs서폿
	5-mSup, eAdc, eSup 앎 	원딜서폿vs서폿
	6-eAdc 앎 		원딜vs
	7-eSup 앎 		
	8-eAdc, eSup 앎 			

2.서폿추천
	-아무것도 모름	wellCompareTo
	-mAdc 앎		
	-mAdc, eAdc 앎 		원딜vs원딜
	-mAdc, eSup 앎		
	-mAdc, eAdc, eSup 앎	원딜서폿vs원딜
	-eAdc 앎			
	-eSup 앎			
	-eAdc, eSup 앎		원딜서폿vs

3.조합추천
	-아무것도 모름	minpansoo, wellCompareTo
	-eAdc 앎
	-eAdc, eSup 앎
	-eSup 앎
(minpansoo, wellCompareTo, wellView) 작업
minpansoo = 최솟값
wellCompareTo = compareTo 메소드 0반영
wellView = 상단메뉴바, 챔피언초상화, 기본적인이쁨

	1.domain에서 compareTo 변경
	1.domain에서 포지션속성마다 포지션Eng 속성을 새로만듦
	2.service에서 해당 domain쓰는 method찾아서 set포지션Eng 적용
	3.해당 view로 가서 이쁜뷰에 쓸 속성은 영어로 변경

댓글판페이징
게시판댓글 페이징


	1.domain에서 compareTo 변경, 인자도 클래스명 따라 변경
	1.domain에서 포지션속성마다 포지션Eng 속성을 새로만듦ㅍ
	2.service에서 해당 domain쓰는 method찾아서 set포지션Eng 적용ㅍ
	3.해당 view로 가서 이쁜뷰에 쓸 속성은 영어로 변경

>>>
뒤늦게 영어 필드 추가하면서 느낀점
설계좀 잘 해둘껄
알고리즘 공부 해야겠다
효율적인 방법 어느정도 찾아봤으면 노가다 빨리 시작하기 - 은근 금방한다


recommendAdcKnowEadc.html 참고하여 
승률 원서 vs 원서 승률 <<<이런 기본 베이직 테이블 생성, 
모든 recommendView에 적용









	
0.수정전화면띄워두기
	
1.<link 복붙
	
2.table 클래스 복붙
	
3.tbody 복붙 

4.★${}복사할때 List붙은거 복사 확인
	
5.서버재실행, 웹 뒤로가기 후 재실행 사진확인

1.serviceImpl
resultList.add(~~~) 부분을 아래로 교체함
if(whole>=minPansoo) {
                resultList.add();//dd
            }

2.service에서 함수마다 매개변수 int minPansoo 배정

3. controller에서 함수마다 맨 뒤 매개변수에 개별 민판수 설정










